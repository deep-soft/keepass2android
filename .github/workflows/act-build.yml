# 2024-02-22
#
#

name: act-Build keepass2android app

#on: [push, pull_request]
on:
  workflow_dispatch:
    inputs:
      upload_artifacts:
        description: upload_artifacts
        type: boolean
        default: false
        required: true

env:
  PRG_NAME:    "keepass2android"
  PRG_VERSION: "1.0.0"
  TAG_NAME:    "keepass2android"
  TAG_VERSION: 'v1.0.0'
  TAG_BUILD:   "-b"
  TAG_REF:     "0000000"
  ANDROID_SIGNING_KEY: '${{ secrets.ANDROID_SIGNING_KEY }}'

jobs:
  windows:
    # on windows-2022 it builds with:
    #    Microsoft Visual Studio\2022\Enterprise
    #    Found Java SDK version 11.0.12
    #    Found Xamarin.Android 13.1.0.1
    #
    runs-on: windows-2022

    steps:
    - uses: deep-soft/checkout@v4

# grep "android:versionName" src/keepass2android/Properties/AndroidManifest_nonet.xml | awk -F"=" '{print $2}' | tr -d '"'
# android:versionName="1.11-r0" 
# src/keepass2android-app/Manifests/AndroidManifest_nonet.xml

    - name: Get ref, set build version
      shell: bash
      run: |
        _ref_all_=$(git log -1 --format='%H')
        # _ref_=$(echo ${_ref_all_::7})
        _ref_org_=${{ env.TAG_REF }}
        _ref_len_="${#_ref_org_}"
        _ref_=$(echo ${_ref_all_::$_ref_len_})
        # _prg_version_=$(grep "android:versionName" src/keepass2android/Properties/AndroidManifest_nonet.xml | awk -F"=" '{print $2}' | awk '{print $1}' | tr -d '"')
        _prg_version_=$(grep "android:versionName" src/keepass2android-app/Manifests/AndroidManifest_nonet.xml | awk -F"=" '{print $2}' | awk '{print $1}' | tr -d '"')
        echo "TAG_REF=$_ref_" >> $GITHUB_ENV
        _build_=${{ env.TAG_BUILD }}.$_ref_
        echo "TAG_BUILD=$_build_" >> $GITHUB_ENV
        echo "PRG_VERSION=$_prg_version_" >> $GITHUB_ENV
        echo "TAG_VERSION=$_prg_version_" >> $GITHUB_ENV

    - name: Print ref, build version
      shell: bash
      run: |
        echo "VER: ${{ env.PRG_VERSION }}
        echo "TAG: ${{ env.TAG_VERSION }}
        echo "REF: ${{ env.TAG_REF }}
        echo "BLD: ${{ env.TAG_BUILD }}
        echo "${{ env.TAG_NAME }}-${{ env.TAG_VERSION }}-${{ env.TAG_BUILD }}" > _tag_name_.txt
        echo "${{ env.TAG_NAME }}-${{ env.TAG_VERSION }}-${{ env.TAG_BUILD }}" > ${{ env.PRG_NAME }}-${{ env.PRG_VERSION }}-release-signed.txt

    - name: Setup Gradle
      uses: deep-soft/gradle-build-action@v3

    - name: Cache NuGet packages
      uses: deep-soft/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('src/**/*.csproj', 'src/**/packages.config') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Fetch submodules
      run: |
        git submodule init && git submodule update

    # Workaround an issue when building on windows-2022. Error was
    #       D8 : OpenJDK 64-Bit Server VM warning : INFO: os::commit_memory(0x00000000ae400000, 330301440, 0) failed; error='The paging file is too small for this operation to complete' (DOS error/errno=1455) [D:\a\keepass2android\keepass2android\src\keepass2android\keepass2android-app.csproj]
    #       C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Xamarin\Android\Xamarin.Android.D8.targets(81,5): error MSB6006: "java.exe" exited with code 1. [D:\a\keepass2android\keepass2android\src\keepass2android\keepass2android-app.csproj]
    - name: Configure Pagefile
      uses: deep-soft/configure-pagefile-action@v1.4
      with:
        minimum-size: 8GB

    - name: Add msbuild to PATH
      uses: deep-soft/setup-msbuild@v2
      # If we want to also have nmake, use this instead
      #uses: ilammy/msvc-dev-cmd@v1

    - name: Switch to JDK-11
      uses: deep-soft/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Display java version
      run: |
        java -version

    # Some components of Keepass2Android currently target android API 26 which are not available on the runner
    - name: Download android-26 API
      shell: cmd
      run: |
        %ANDROID_SDK_ROOT%\cmdline-tools\latest\bin\sdkmanager --install "platforms;android-26"

    - name: Build native dependencies
      shell: cmd
      run: |
        make native

    - name: Build java dependencies
      shell: cmd
      run: |
        make java

    - name: Install NuGet dependencies (net)
      run: 
        make nuget Flavor=Net Configuration=Release

    - name: Build keepass2android (net)
      run: |
        make msbuild Flavor=Net Configuration=Release

    - name: Build APK (net)
      run: |
        make apk Flavor=Net Configuration=Release

    - name: Archive production artifacts (net)
      if: ${{ inputs.upload_artifacts }}
      uses: deep-soft/upload-artifact@v4
      with:
        name: signed-APK-net-${{ github.job }}
        path: |
          src/keepass2android/bin/*/*-Signed.apk

    - name: Copy apk from outputs/
      shell: bash
      run: |
        set -x
        mkdir -p signed-apk/net
        echo "LIST: " src/keepass2android/bin/*/*.apk
        ls -l src/keepass2android/bin/*/*.apk
        cp src/keepass2android/bin/Release/keepass2android.keepass2android-Signed.apk ./signed-apk/net/
        echo "LIST: " ./signed-apk/net/
        ls -l ./signed-apk/net/
        mv ./signed-apk/net/keepass2android.keepass2android-Signed.apk ./signed-apk/net/${{ env.PRG_NAME }}-${{ env.PRG_VERSION }}-net.apk
        echo "LIST: " ./signed-apk/net/${{ env.PRG_NAME }}-${{ env.PRG_VERSION }}-net.apk
        ls -l ./signed-apk/net/

    - uses: deep-soft/sign-android-release@v1
      name: Sign app APK
      if: env.ANDROID_SIGNING_KEY != null
      id: sign-keepass2android-net
      with:
        releaseDirectory: ./signed-apk/net/
        signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
        alias: ${{ secrets.ANDROID_ALIAS }}
        keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
      env:
        # override default build-tools version (29.0.3) -- optional
        BUILD_TOOLS_VERSION: "34.0.0"

    - name: Upload Artifacts
      if: env.ANDROID_SIGNING_KEY != null
      uses: deep-soft/upload-artifact@v4
      with:
        name: ${{ env.PRG_NAME }}-${{ env.PRG_VERSION }}-net
        path: ${{steps.sign-keepass2android-net.outputs.signedReleaseFile}}

    - name: Publish signed apk package
      if: env.ANDROID_SIGNING_KEY != null
      uses: deep-soft/action-gh-release@v2.1
      with:
        draft: true
        tag_name: ${{ env.TAG_NAME }}
#          ./signed-apk/net/${{ env.PRG_NAME }}-${{ env.PRG_VERSION }}-net-signed.apk        
        files: |
          ${{steps.sign-keepass2android-net.outputs.signedReleaseFile}}
          ${{ env.PRG_NAME }}-${{ env.PRG_VERSION }}-release-signed.txt
          _tag_name_.txt

    - name: Install NuGet dependencies (nonet)
      run: make nuget Flavor=NoNet Configuration=Release

    - name: Build keepass2android (nonet)
      run: |
        make msbuild Flavor=NoNet Configuration=Release

    - name: Test Autofill
      working-directory: ./src/Kp2aAutofillParserTest
      run: |
        dotnet test

    - name: Build APK (nonet)
      run: |
        make apk Flavor=NoNet Configuration=Release

    - name: Archive production artifacts (nonet)
      if: ${{ inputs.upload_artifacts }}
      uses: deep-soft/upload-artifact@v4
      with:
        name: signed-APK-nonet-${{ github.job }}
        path: |
          src/keepass2android/bin/*/*-Signed.apk

    - name: Copy apk from outputs/
      shell: bash
      run: |
        set -x
        mkdir -p signed-apk/nonet
        echo "LIST: " src/keepass2android/bin/*/*.apk
        ls -l src/keepass2android/bin/*/*.apk
        cp src/keepass2android/bin/Release/keepass2android.keepass2android_nonet-Signed.apk ./signed-apk/nonet
        echo "LIST: " ./signed-apk/nonet
        ls -l ./signed-apk/nonet
        mv ./signed-apk/nonet/keepass2android.keepass2android_nonet-Signed.apk ./signed-apk/nonet/${{ env.PRG_NAME }}-${{ env.PRG_VERSION }}-nonet.apk
        echo "LIST: " ./signed-apk/nonet/${{ env.PRG_NAME }}-${{ env.PRG_VERSION }}-nonet.apk
        ls -l ./signed-apk/nonet

    - uses: deep-soft/sign-android-release@v1
      name: Sign app APK
      if: env.ANDROID_SIGNING_KEY != null
      id: sign-keepass2android-nonet
      with:
        releaseDirectory: ./signed-apk/nonet
        signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
        alias: ${{ secrets.ANDROID_ALIAS }}
        keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
      env:
        # override default build-tools version (29.0.3) -- optional
        BUILD_TOOLS_VERSION: "34.0.0"

    - name: Upload Artifacts
      if: env.ANDROID_SIGNING_KEY != null
      uses: deep-soft/upload-artifact@v4
      with:
        name: ${{ env.PRG_NAME }}-${{ env.PRG_VERSION }}-nonet
        path: ${{steps.sign-keepass2android-nonet.outputs.signedReleaseFile}}

    - name: Publish signed apk package
      if: env.ANDROID_SIGNING_KEY != null
      uses: deep-soft/action-gh-release@v2.1
      with:
        draft: true
        tag_name: ${{ env.TAG_NAME }}
#          ./signed-apk/nonet/${{ env.PRG_NAME }}-${{ env.PRG_VERSION }}-nonet-signed.apk        
        files: |
          ${{steps.sign-keepass2android-nonet.outputs.signedReleaseFile}}
          ${{ env.PRG_NAME }}-${{ env.PRG_VERSION }}-release-signed.txt
          _tag_name_.txt

    - name: Perform "make distclean"
      run: make distclean
